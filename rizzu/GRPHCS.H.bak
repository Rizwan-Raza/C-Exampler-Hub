#ifndef GRPHCS_H_INCLUDED
#define GRPHCS_H_INCLUDED
//Function to draw box using (x,y) coordinates and length and breadth of box
void setbkcolor(int color)
{
    int i,j;
    textbackground(color);
    for(i=0;i<40;i++)
    {
        for(j=0;j<80;j++)
        {
            gotoxy(j,i);
            printf(" ");
        }
    }
}
void setConSize(int x,int y)
{
    char str[32];   // Use an array which is large enough
    snprintf(str, sizeof(str), "mode con:cols=%d lines=%d",x,y);
    system(str);
}
void drawBox(int x,int y,int lenght,int breadth,int bc,int fc)
{
	int i,j;
	textcolor(fc);
	textbackground(bc);
	gotoxy(x,y);                      //left top corner.
	printf("%c",218);                //left top corner.
	gotoxy(x+lenght+1,y);             //right top corner.
	printf("%c",191);                //right top corner.
	gotoxy(x,y+breadth+1);            //left bottom corner.
	printf("%c",192);                //left bottom corner.
	gotoxy(x+lenght+1,y+breadth+1);   //right bottom corner.
	printf("%c",217);                //right bottom corner.
	for(i=x+1;i<x+lenght+1;i++)
	{
		gotoxy(i,y);
		printf("%c",196);
		gotoxy(i,y+breadth+1);
		printf("%c",196);
	}
	for(j=y+1;j<y+breadth+1;j++)
	{
		gotoxy(x,j);
		printf("%c",179);
		gotoxy(x+lenght+1,j);
		printf("%c",179);
	}
}
void drawXline1(int x,int y,int lenght,int bc,int fc)
{
	int i;
	textcolor(fc);
	textbackground(bc);
	for(i=0;i<lenght;i++)
	{
		gotoxy(x+i,y);
		printf("%c",196);
	}
}
//Function to draw line using (x,y) coordinates and length of the line.
void drawXline111(int x,int y,int lenght,int bc,int fc)
{
	int i;
	textcolor(fc);
	textbackground(bc);
	gotoxy(x,y);                   //left corner.
	printf("%c",195);             //left corner.
	gotoxy(x+lenght+1,y);          //right corner.
	printf("%c",180);             //right corner.
	for(i=1;i<lenght+1;i++)
	{
		gotoxy(x+i,y);
		printf("%c",196);
	}
}
//Function to draw box using (x,y) coordinates and length and breadth of box
void drawBox2(int x,int y,int lenght,int breadth,int bc,int fc)
{
	int i,j;
	textcolor(fc);
	textbackground(bc);
	gotoxy(x,y);                      //left top corner.
	printf("%c",201);                //left top corner.
	gotoxy(x+lenght+1,y);             //right top corner.
	printf("%c",187);                //right top corner.
	gotoxy(x,y+breadth+1);            //left bottom corner.
	printf("%c",200);                //left bottom corner.
	gotoxy(x+lenght+1,y+breadth+1);   //right bottom corner.
	printf("%c",188);                //right bottom corner.
	for(i=x+1;i<x+lenght+1;i++)
	{
		gotoxy(i,y);
		printf("%c",205);
		gotoxy(i,y+breadth+1);
		printf("%c",205);
	}
	for(j=y+1;j<y+breadth+1;j++)
	{
		gotoxy(x,j);
		printf("%c",186);
		gotoxy(x+lenght+1,j);
		printf("%c",186);
	}
}
//Function to draw horizontal line using (x,y) coordinates and length of the line.
void drawXline212(int x,int y,int lenght,int bc,int fc)
{
	int i;
	textcolor(fc);
	textbackground(bc);
	gotoxy(x,y);                   //left corner.
	printf("%c",199);             //left corner.
	gotoxy(x+lenght+1,y);          //right corner.
	printf("%c",182);             //right corner.
	for(i=1;i<lenght+1;i++)
	{
		gotoxy(x+i,y);
		printf("%c",196);
	}
}
//Function to draw vertical line using (x,y) coordinates and length of the line.
void drawYline112(int x,int y,int height,int bc,int fc)
{
	int i;
	textcolor(fc);
	textbackground(bc);
	gotoxy(x,y);                   //left corner.
	printf("%c",194);             //left corner.
	gotoxy(x,y+height+1);          //right corner.
	printf("%c",207);             //right corner.
	for(i=1;i<height+1;i++)
	{
		gotoxy(x,y+i);
		printf("%c",179);
	}
}
void drawbgcolor(int x,int y,int height,int width,int bc,int fc)
{
	int i,j;
	textcolor(fc);
	textbackground(bc);
	for(i=0;i<height;i++)
	{
		for(j=0;j<width;j++)
		{
			gotoxy(x+i,y+j);
			printf("%c",219);
		}
	}
}
void drawMatrix(int x,int y,int row,int col,int wdt,int bc,int fc)
{
	int i;
	textcolor(fc);
	textbackground(bc);
	gotoxy(x,y);
	printf("%c",218);
	gotoxy(x,y+col+1);
	printf("%c",192);
	gotoxy(x+row*wdt+3,y);
	printf("%c",191);
	gotoxy(x+row*wdt+3,y+col+1);
	printf("%c",217);
	for(i=1;i<=col;i++)
	{
		gotoxy(x,y+i);
		printf("%c",179);
		gotoxy(x+row*wdt+3,y+i);
		printf("%c",179);
	}
}
void drawDeterm(int x,int y,int row,int col,int wdt,int bc,int fc)
{
	int i;
	textcolor(fc);
	textbackground(bc);
	for(i=0;i<=col+1;i++)
	{
		gotoxy(x,y+i);
		printf("%c",179);
		gotoxy(x+row*wdt+3,y+i);
		printf("%c",179);
	}
}
void drawMenu()
{
	clrscr();
	drawBox2(1,1,78,22,BACK,HEAD);
	drawXline212(1,5,78,BACK,HEAD);
	drawbgcolor(2,2,78,3,HEAD,HEAD);
	textcolor(BRDR);
}
void drawSet()
{	clrscr();
	drawBox2(1,1,78,22,BACK,HEAD);
	drawXline212(1,5,78,BACK,HEAD);
	drawYline112(50,5,18,BACK,HEAD);
	drawbgcolor(2,2,78,3,HEAD,HEAD);
	textcolor(BRDR);
}
void clrpnl(int x,int xl,int y,int yl)
{
	int xx;
	textcolor(12);
	for(;y<=yl;y++)
	{
		for(xx=x;xx<=xl;xx++)
		{
			gotoxy(xx,y);
			printf(" ");//or printf("%c",219);
		}
	}
	textcolor(TXET);
}
void drawTri_l_b(int x,int y,int s,int clr)
{
	int i,j;
	for(i=0;i<s;i++)
	{
		for(j=0;j<=i;j++)
		{
			gotoxy(x+j,y+i);
			textcolor(clr);
//			if(j!=s-1)
				printf("%c",219);
  //			else
    //				printf("%c",219);
		}
	}
	textcolor(TXET);

}
void drawTri_r_t(int x,int y,int s,int clr)
{
	int i,j;
	for(i=0;i<s;i++)
	{
		for(j=i+1;j<=s;j++)
		{
			gotoxy(x+j,y+i);
			textcolor(clr);
//			if(j!=s-1)
				printf("%c",219);
  //			else
    //				printf("%c",219);
		}
	}
	textcolor(TXET);

}
void drawTri_r_b(int x,int y,int s,int clr)
{
	int i,j;
	for(i=0;i<s;i++)
	{
		for(j=s-i;j<=s;j++)
		{
			gotoxy(x+j,y+i);
			textcolor(clr);
//			if(j!=s-1)
				printf("%c",219);
  //			else
    //				printf("%c",219);
		}
	}
	textcolor(TXET);

}
void drawTri_l_t(int x,int y,int s,int clr)
{
	int i,j;
	for(i=0;i<s;i++)
	{
		for(j=0;j<s-i;j++)
		{
			gotoxy(x+j,y+i);
			textcolor(clr);
//			if(j!=s-1)
				printf("%c",219);
  //			else
    //				printf("%c",219);
		}
	}
	textcolor(TXET);

}
void drawPyramid_b(int x,int y,int s,int clr)
{
	drawTri_r_b(x,y,s/2+1,clr);
	drawTri_l_b(x+s/2+1,y,s/2+1,clr);
}
void drawPyramid_t(int x,int y,int s,int clr)
{
	drawTri_r_t(x,y,s/2+1,clr);
	drawTri_l_t(x+s/2+1,y,s/2+1,clr);
}
void drawDiamond(int x,int y,int s,int clr)
{
	drawTri_r_b(x,y,s/4+1,clr);
	drawTri_l_b(x+s/4+1,y,s/4+1,clr);
	drawTri_r_t(x,y+s/4,s/4+1,clr);
	drawTri_l_t(x+s/4+1,y+s/4,s/4+1,clr);
}


#endif // GRPHCS_H_INCLUDED
